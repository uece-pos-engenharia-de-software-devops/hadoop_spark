services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - "9870:9870"
      - "9000:9000"
    environment:
      - CLUSTER_NAME=hadoop-cluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - ./data/namenode:/hadoop/dfs/name
      - ./config:/hadoop-config
      - ./scripts:/scripts
      - ./data:/data
    networks:
      - hadoop

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    ports:
      - "9864:9864"
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - HDFS_CONF_dfs_replication=1
      - SERVICE_PRECONDITION=namenode:9870
    volumes:
      - ./data/datanode:/hadoop/dfs/data
    networks:
      - hadoop
    depends_on:
      - namenode

  init-hdfs:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - namenode
    entrypoint: ["/bin/bash", "-c", "/scripts/load_hdfs.sh"]
    volumes:
      - ./scripts:/scripts
      - ./data:/data
      - ./config:/hadoop-config
    networks:
      - hadoop
  spark-master:
    image: bitnami/spark:3.3.1
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./scripts:/scripts
      - ./data:/data
    networks:
      - hadoop
    #entrypoint: ["/scripts/start-master.sh"]
    depends_on:
      - namenode

  spark-worker:
    image: bitnami/spark:3.3.1
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
    ports:
      - "8081:8081"
    volumes:
      - ./scripts:/scripts
      - ./data:/data
    networks:
      - hadoop
    depends_on:
      - spark-master

networks:
  hadoop:
    driver: bridge
